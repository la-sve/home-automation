esphome:
  name: pool
  on_boot:
    then:
      - script.execute: pool_set_mode_stop
      - script.execute: pool_update_auto_mode

esp32:
  board: az-delivery-devkit-v4
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pool Fallback Hotspot"
    password: "q1Qp4S8Kif9f"
  # Zwischenzeitliche Aussetzer vermeiden
  power_save_mode: none

captive_portal:

# One-Wire-Bus fuer Temperatursensoren DS18B20
dallas:
  - pin: 21
    update_interval: 30s

sensor:
  # Temperatursensoren. Auswertung erfolgt ueber binary template sensor.
  - platform: dallas
    address: 0xA07B8F5F1E64FF28
    #index: 0
    id: pool_temp_poolwater
    resolution: 10
    name: "Wassertemperatur"
  - platform: dallas
    #index: 0
    address: 0x64998D5F1E64FF28
    id: pool_temp_solar
    resolution: 10
    name: "Solartemperatur"
  # YF-DN50 Durschflusssensor
  - platform: pulse_counter
    pin: 13
    name: "Pulse Counter"
    id: pool_durchfluss
    update_interval: 5s
    filters:
    - lambda: return (x / 27.0) * 60.0;
    unit_of_measurement: "l/h"
  # Pumpenzustand
  - platform: template
    name: "Poolpumpenmodus"
    id: pool_speed_sensor


binary_sensor:
  # Schalter Brunnen
  - platform: gpio
    pin:
      number: 14
      mode:
        input: true
        pullup: true
    name: "Brunnen Leer"
    id: pool_brunnen_leer
    # Debouncing
    filters:
      - delayed_on: 10ms
  # Schalter
  - platform: gpio
    pin:
      number: 32
      mode:
        input: true
        pullup: true
    name: "Automatikmodus"
    id: pool_automode
    # Debouncing
    filters:
      - delayed_on: 10ms
    on_press:
      then:
        # Schalter ist oben, dann Automodus
        - switch.turn_on: pumpe_auto_led
        # Zunächst in den Stop-Modus wechseln
        - script.execute: pool_set_mode_stop
        # Modus ermitteln
        - script.execute: pool_update_auto_mode
    on_release:
      then:
        # Schalter ist unten, dann manueller Modus
        - switch.turn_off: pumpe_auto_led
        # Zunächst in den Stop-Modus wechseln
        - script.execute: pool_set_mode_stop
  # Button (rot)
  - platform: gpio
    pin:
      number: 33
      mode:
        input: true
        pullup: true
    name: "Stop angefragt"
    id: pool_stop
    # Debouncing
    filters:
      - delayed_on: 10ms
    on_release:
      then:
        - logger.log: Stop per physischem button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_stop
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
  # Button
  - platform: gpio
    pin:
      number: 25
      mode:
        input: true
        pullup: true
    name: "Geschwindigkeit 1 angefragt"
    id: pool_speed1
    # Debouncing
    filters:
      - delayed_on: 10ms
    on_release:
      then:
        - logger.log: Geschwindigkeit 1 per physischem button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_1
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
  # Button
  - platform: gpio
    pin:
      number: 26
      mode:
        input: true
        pullup: true
    name: "Geschwindigkeit 2 angefragt"
    id: pool_speed2
    # Debouncing
    filters:
      - delayed_on: 10ms
    on_release:
      then:
        - logger.log: Geschwindigkeit 2 per physischem button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_2
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
  # Button
  - platform: gpio
    pin:
      number: 27
      mode:
        input: true
        pullup: true
    name: "Geschwindigkeit 3 angefragt"
    id: pool_speed3
    # Debouncing
    filters:
      - delayed_on: 10ms
    on_release:
      then:
        - logger.log: Geschwindigkeit 3 per physischem button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_3
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
  # ===========================================
  # Logik-Sensoren
  #
  - platform: template
    name: "Wasser noch zu kalt"
    id: pool_need_heating
    lambda: |-
      if (id(pool_temp_poolwater).state < 26) {
        // Maximale Wohlfuehltemperatur noch nicht erreicht
        return true;
      } else {
        // Waermer soll es nicht mehr werden!
        return false;
      }
  - platform: template
    name: "Solar Wärme verfügbar"
    id: pool_heating_available
    lambda: |-
      if (( id(pool_temp_solar).state - id(pool_temp_poolwater).state ) > 5) {
        // Solarkollektor kann genutzt werden
        return true;
      } else {
        // Solar ist zu kalt.
        return false;
      }

# Die meisten switches sind nur intern und nicht fuer die Steuerung ueber HA gedacht!
# Für HA werden Buttons eingefuehrt
switch:
  # Steuert LED fuer Automatikmodus
  - platform: gpio
    name: "Automatikmodus aktiv"
    id: pumpe_auto_led
    pin: 19
    inverted: false
    internal: true
  # Steuert Relais und LED fuer Pumpe-Stop
  - platform: gpio
    name: "Pumpenmodus STOP"
    id: pumpe_stop_swi
    pin: 18
    inverted: false
    internal: true
    restore_mode: ALWAYS_ON
  # Steuert Relais und LED fuer Pumpengeschwindigkeit 1
  - platform: gpio
    name: "Pumpenmodus 1"
    id: pumpe_mode1_swi
    pin: 5
    inverted: false
    internal: true
    restore_mode: ALWAYS_OFF
  # Steuert Relais und LED fuer Pumpengeschwindigkeit 2
  - platform: gpio
    name: "Pumpenmodus 2"
    id: pumpe_mode2_swi
    pin: 17
    inverted: false
    internal: true
    restore_mode: ALWAYS_OFF
  # Steuert Relais und LED fuer Pumpengeschwindigkeit 3
  - platform: gpio
    name: "Pumpenmodus 3"
    id: pumpe_mode3_swi
    pin: 16
    inverted: false
    internal: true
    restore_mode: ALWAYS_OFF
  # Zeit zum Beleuchten
  - platform: template
    name: "Nachtmodus"
    id: pool_nachtmodus_swi
    turn_on_action:
      # homeassistant mitteilen, dass der Schalter jetzt an ist.
      - switch.template.publish:
          id: pool_nachtmodus_swi
          state: ON
    turn_off_action:
      # homeassistant mitteilen, dass der Schalter jetzt aus ist.
      - switch.template.publish:
          id: pool_nachtmodus_swi
          state: OFF
      - script.execute: pool_update_auto_mode

# Buttons fuer HA
button:
  - platform: template
    name: "Stoppe Pumpe"
    id: pool_stop_btn
    on_press:
      then:
        - logger.log: Stoppe Pumpe per HA button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_stop
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
  - platform: template
    name: "Aktiviere Stufe 1"
    id: pool_mode1_btn
    on_press:
      then:
        - logger.log: Aktiviere Stufe 1 per HA button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_1
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
  - platform: template
    name: "Aktiviere Stufe 2"
    id: pool_mode2_btn
    on_press:
      then:
        - logger.log: Aktiviere Stufe 2 per HA button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_2
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
  - platform: template
    name: "Aktiviere Stufe 3"
    on_press:
      then:
        - logger.log: Aktiviere Stufe 3 per HA button angefordert
        - if:
            condition:
              binary_sensor.is_off: pool_automode
            then:
              - script.execute: pool_set_mode_3
            else:
              - logger.log: Verweigert, Automatikmodus ist aktiv!
      
# Wir definieren die verschiedenen Pumpenansteuerungen als Skripte
script:
  - id: pool_set_mode_stop
    then:
      - switch.turn_off: pumpe_mode1_swi
      - switch.turn_off: pumpe_mode2_swi
      - switch.turn_off: pumpe_mode3_swi
      - switch.turn_on: pumpe_stop_swi
      - sensor.template.publish:
          id: pool_speed_sensor
          state: 0.0
  - id: pool_set_mode_1
    then:
      - switch.turn_off: pumpe_stop_swi
      - switch.turn_off: pumpe_mode3_swi
      - switch.turn_off: pumpe_mode2_swi
      - switch.turn_on: pumpe_mode1_swi
      - sensor.template.publish:
          id: pool_speed_sensor
          state: 1.0
  - id: pool_set_mode_2
    then:
      - switch.turn_off: pumpe_stop_swi
      - switch.turn_off: pumpe_mode3_swi
      - switch.turn_off: pumpe_mode1_swi
      - switch.turn_on: pumpe_mode2_swi
      - sensor.template.publish:
          id: pool_speed_sensor
          state: 2.0
  - id: pool_set_mode_3
    then:
      - switch.turn_off: pumpe_stop_swi
      - switch.turn_off: pumpe_mode2_swi
      - switch.turn_off: pumpe_mode1_swi
      - switch.turn_on: pumpe_mode3_swi
      - sensor.template.publish:
          id: pool_speed_sensor
          state: 3.0
  - id: pool_update_auto_mode
    then:
      - logger.log: AKTUALISIERE AUTOMATIKMODUS.
      - if:
          condition:
            # Automatikmodus und Brunnen Leer
            and:
              - binary_sensor.is_on: pool_automode
              - binary_sensor.is_on: pool_brunnen_leer
          then:
            # Wir stoppen die Pumpe
            - script.execute: pool_set_mode_stop
      - if:
          condition:
            # Automatikmodus und Brunnen Voll
            and:
              - binary_sensor.is_on: pool_automode
              - binary_sensor.is_off: pool_brunnen_leer
          then:
            if: 
              condition:
                # Nachtmodus an, dann Pumpe aus
                - switch.is_on: pool_nachtmodus_swi
              then:
                - script.execute: pool_set_mode_stop
              else:
                # Kein Nachtmodus
                if:
                  condition:
                    # Bedingungen fuer Stufe 2:
                    #   Wassertemperatur ist noch zu kalt (kleiner 26 Grad)
                    #   Solarwaerme ist verfuegbar
                    and:
                      - binary_sensor.is_on: pool_need_heating
                      - binary_sensor.is_on: pool_heating_available
                  then:
                    # Der Pool wird gezeizt.
                    - script.execute: pool_set_mode_2
                  else:
                    # Bedingungen fuer Stufe 2 nicht erfuellt
                    - script.execute: pool_set_mode_1

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      # Nachtmodus aktivieren
      - seconds: 0
        minutes: 0
        hours: 20
        then:
          - switch.turn_on: pool_nachtmodus_swi
      # Nachtmodus deaktivieren
      - seconds: 0
        minutes: 0
        hours: 8
        then:
          - switch.turn_off: pool_nachtmodus_swi
      # Regelmaessig Werte pruefen und Einstellungen vornehmen.
      - seconds: 0
        minutes: /1
        hours: 8-20
        then:
          - script.execute: pool_update_auto_mode

      